{
    "openapi": "3.0.1",
    "info": {
        "title": "Book Store",
        "description": "This is a backend system for a book store",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "carlosarroyoam@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1.0-snapshot"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/v1",
            "description": "Dev server"
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Operations about authentication"
        },
        {
            "name": "user",
            "description": "Operations about user"
        },
        {
            "name": "admin",
            "description": "Operations about admin users"
        },
        {
            "name": "book",
            "description": "Operations about book"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Authenticates a user",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "User credentials object that will be authenticated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCredentials"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Revokes a refresh token",
                "operationId": "authLogout",
                "requestBody": {
                    "description": "User credentials object that will be revoked",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRevokeRefreshToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Renews a user token",
                "operationId": "refreshToken",
                "requestBody": {
                    "description": "User token object that will be renewed",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRefreshToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Gets all users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Adds a new user",
                "operationId": "addUser",
                "requestBody": {
                    "description": "User object that needs to be added",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Gets a user",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Deactivates a user",
                "operationId": "deactivateUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to deactivate",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Restores a user",
                "operationId": "restoreUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to restore",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admins": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Gets all admins",
                "operationId": "getAdmins",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Adds a new admin",
                "operationId": "addAdmin",
                "requestBody": {
                    "description": "Admin object that needs to be added",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddAdmin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Updates a admin by its id",
                "operationId": "updateAdmin",
                "requestBody": {
                    "description": "Admin object that needs to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAdmin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/admins/{userId}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Gets a admin",
                "operationId": "getAdminById",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of admin to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BAD_REQUEST"
                    },
                    "401": {
                        "$ref": "#/components/responses/UNAUTHORIZED"
                    },
                    "403": {
                        "$ref": "#/components/responses/FORBIDDEN"
                    },
                    "404": {
                        "$ref": "#/components/responses/NOT_FOUND"
                    },
                    "500": {
                        "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "responses": {
            "OK": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "example": {
                                "message": "OK",
                                "data": {}
                            }
                        }
                    }
                }
            },
            "BAD_REQUEST": {
                "description": "BAD_REQUEST",
                "content": {
                    "application/json": {
                        "schema": {
                            "example": {
                                "message": "The request data is not valid",
                                "error": "Bad request",
                                "data": {
                                    "password": "The password must be between 8 and 16 characters",
                                    "email": "The email format is invalid"
                                }
                            }
                        }
                    }
                }
            },
            "NOT_FOUND": {
                "description": "NOT_FOUND",
                "content": {
                    "application/json": {
                        "schema": {
                            "example": {
                                "message": "Not found",
                                "error": "The /api/v1/wrong-route route was not found on this server"
                            }
                        }
                    }
                }
            },
            "UNAUTHORIZED": {
                "description": "UNAUTHORIZED",
                "content": {
                    "application/json": {
                        "schema": {
                            "example": {
                                "message": "Failed to authorize user with the email: example@domain.com",
                                "error": "Unauthorized"
                            }
                        }
                    }
                }
            },
            "FORBIDDEN": {
                "description": "FORBIDDEN",
                "content": {
                    "application/json": {
                        "schema": {
                            "example": {
                                "message": "The user has not permission to perform this action",
                                "error": "Forbidden"
                            }
                        }
                    }
                }
            },
            "INTERNAL_SERVER_ERROR": {
                "description": "INTERNAL_SERVER_ERROR",
                "content": {
                    "application/json": {
                        "schema": {
                            "example": {
                                "message": "Error while updating information",
                                "error": "Internal server error"
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "UserCredentials": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "UserRevokeRefreshToken": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "refresh_token",
                    "user_id"
                ]
            },
            "UserRefreshToken": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh_token"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "password"
                ]
            },
            "AddAdmin": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "is_super": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "password"
                ]
            },
            "UpdateAdmin": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "is_super": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "first_name",
                    "last_name",
                    "password"
                ]
            }
        }
    }
}